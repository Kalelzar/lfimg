#!/bin/sh


image() {
    if [ -n "$DISPLAY" ]
    then
        dims="$(mediainfo --Output=JSON "$1" | jq '.media.track | map(select(.["@type"]=="Image")) | .[] | "\(.Width)/\(.Height)"' -r)"
        ratio="$(echo "scale=5;$dims" | bc)"
        w="$2"
        h="$3"
        check="$(echo "$ratio > 1" | bc | sed 's/1/true/;s/0//')"
        if [ -n "$check" ]
        then
            h="$(echo "$w / $ratio / 2" | bc | cut -d'.' -f1)"
        else
            w="$(echo "$h * $ratio" | bc | cut -d'.' -f1)"
        fi


        printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "fit_contain", "path": "%s"}\n' "$4" "$(($5+($3 - h)))" "$(($2 -  1))" "$(($3 - 1))" "$1" > "$FIFO_UEBERZUG"
        exit 1
    else
        chafa "$1" -s "$4"
    fi
}



HIGHLIGHT_SIZE_MAX=262143  # 256KiB
HIGHLIGHT_TABWIDTH=2
HIGHLIGHT_STYLE='pablo'

set -C -f -u
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"

mimetype="$(file --dereference  --brief --mime-type -- "$1")"

handle_mime(){
#    echo "$mimetype" "$1" "$2" "$3" "$4" "$5"
    case "$mimetype" in
        text/html)
            [ ! -f "$CACHE" ] && \
                wkhtmltopdf "$1" - | pdftoppm -jpeg -f 1 -singlefile - "$CACHE"
            image "${CACHE}" "$2" "$3" "$4" "$5"
        ;;
        text/troff) man "$1" | col -b ;;
        text/csv)
            csv-format < "$1"
            ;;
        */json)
            jq < "$1"
            ;;
        text/*|*/xml)
            if [ "$( stat --printf='%s' -- "$1" )" -gt "${HIGHLIGHT_SIZE_MAX}" ]; then
                exit 2;
            fi
            if [ "$( tput colors )" -ge 256 ]; then
                highlight_format='xterm256'
            else
                highlight_format='ansi'
            fi
            highlight --replace-tabs="${HIGHLIGHT_TABWIDTH}" \
                      --out-format="${highlight_format}" \
                      --style="${HIGHLIGHT_STYLE}" --force -- "$1" ;;
        application/x-tar)
            tar tf "$1" ;;
        application/gzip)
            tar tzf "$1" ;;
        application/x-xz)
            atool --list -- "$1" ;;
        application/zip)
            atool --list -- "$1" ;;
        application/x-bzip2)
            tar tif "$1" ;;
        application/rar)
            unrar l "$1" ;;
        application/7z) 7z l "$1" ;;
        application/x-object) nm "$1" | less ;;
        application/torrent|application/x-bittorrent) transmission-show "$1" ;;
        application/epub+zip)
            [ ! -f "$CACHE" ] && \
                epub-thumbnailer "$1" "$CACHE" 1024
            image "$CACHE" "$2" "$3" "$4" "$5"
            ;;
        application/pdf)
            [ ! -f "${CACHE}.png" ] && \
                pdftoppm -png -f 1 -singlefile "$1" "$CACHE"
            image "${CACHE}.png" "$2" "$3" "$4" "$5"
            ;;
        *opendocument*) odt2txt "$1";;
        image/*)
            image "$1" "$2" "$3" "$4" "$5"
            ;;
        audio/flac)
            [ ! -f "${CACHE}.png" ] && \
                ffmpegthumbnailer -i "$1" -o "${CACHE}.png" -s 0
            metaflac --list --block-type=VORBIS_COMMENT  "$1" | grep comment | sed -E 's/[[:space:]]+comment[[][0-9]+[]]: //g;/^  comments: [0-9]*/d' | grep -E '(TITLE|ARTISTS|ALBUM|GENRE|ALBUMARTIST)=' | sed 's/=/: /g'
            image "${CACHE}.png" "$2" "$3" "$4" "$5"
            ;;
        video/*|audio/*)
            [ ! -f "${CACHE}.png" ] && \
                ffmpegthumbnailer -i "$1" -o "${CACHE}.png" -s 0
            mediainfo "$1"
            image "${CACHE}.png" "$2" "$3" "$4" "$5"
            ;;
        application/octet-stream)
            mediainfo "$1" ;;
        application/x-dosexec)
            winedump "$1" ;;
        */x-empty)
            echo "<EMPTY>" ;;
        *)
            case "$1" in
                *.iso) iso-info --no-header -l "$1" ;;
                *.doc) catdoc "$1" ;;
                *.docx)

                    if ! sha256sum -c "${CACHE}.chk" --status
                    then
                        sha256sum "$1" > "${CACHE}.chk"
                        pandoc "$1" -o "${CACHE}.pdf"
                        pdftoppm -png -f 1 -singlefile "${CACHE}.pdf" "${CACHE}.png"
                    fi

                    [ ! -f "${CACHE}.pdf" ] && \
                        pandoc "$1" -o "${CACHE}.pdf"
                    [ ! -f "${CACHE}.png" ] && \
                        pdftoppm -png -f 1 -singlefile "${CACHE}.pdf" "${CACHE}.png"

                    image "${CACHE}.png" "$2" "$3" "$4" "$5"
                    ;;
                *) echo "$mimetype is not a recognized mime type."
            esac
    esac

}

handle_mime "$1" "$2" "$3" "$4" "$5"
